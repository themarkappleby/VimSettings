let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <C-CR> <Plug>OrgNewHeadingBelowAfterChildrenInsert
imap <buffer> <silent> <S-CR> <Plug>OrgNewHeadingBelowInsert
imap <buffer> <silent> <C-S-CR> <Plug>OrgNewHeadingAboveInsert
nmap <buffer> <silent> 	 <Plug>OrgToggleFoldingNormal
nmap <buffer> <silent> <ir <Plug>OrgPromoteSubtreeNormal
nmap <buffer> <silent> <[[ <Plug>OrgPromoteSubtreeNormal
nmap <buffer> <silent> <ar <Plug>OrgPromoteSubtreeNormal
nmap <buffer> <silent> <ih <Plug>OrgPromoteHeadingNormal
nmap <buffer> <silent> <{ <Plug>OrgPromoteHeadingNormal
nmap <buffer> <silent> << <Plug>OrgPromoteOnHeadingNormal
nmap <buffer> <silent> <ah <Plug>OrgPromoteHeadingNormal
nmap <buffer> <silent> >ir <Plug>OrgDemoteSubtreeNormal
nmap <buffer> <silent> >]] <Plug>OrgDemoteSubtreeNormal
nmap <buffer> <silent> >ar <Plug>OrgDemoteSubtreeNormal
nmap <buffer> <silent> >ih <Plug>OrgDemoteHeadingNormal
nmap <buffer> <silent> >} <Plug>OrgDemoteHeadingNormal
nmap <buffer> <silent> >> <Plug>OrgDemoteOnHeadingNormal
nmap <buffer> <silent> >ah <Plug>OrgDemoteHeadingNormal
nmap <buffer> <silent> I <Plug>OrgEditAtFirstCharacter
omap <buffer> <silent> OR :normal VOR
omap <buffer> <silent> Or <Plug>OrgOuterTreeOperator
vmap <buffer> <silent> OR <Plug>OrgAOuterTreeVisual
vmap <buffer> <silent> Or <Plug>OrgOuterTreeVisual
omap <buffer> <silent> OH :normal VOH
omap <buffer> <silent> Oh <Plug>OrgOuterHeadingOperator
vmap <buffer> <silent> OH <Plug>OrgAOuterHeadingVisual
vmap <buffer> <silent> Oh <Plug>OrgOuterHeadingVisual
omap <buffer> <silent> [[ <Plug>OrgJumpToPreviousSkipChildrenOperator
vmap <buffer> <silent> [[ <Plug>OrgJumpToPreviousSkipChildrenVisual
nmap <buffer> <silent> [[ <Plug>OrgJumpToPreviousSkipChildrenNormal
nmap <buffer> <silent> \eh <Plug>OrgExportToHTML
nmap <buffer> <silent> \ep <Plug>OrgExportToPDF
nmap <buffer> <silent> \caL <Plug>OrgAgendaTimeline
nmap <buffer> <silent> \caa <Plug>OrgAgendaWeek
nmap <buffer> <silent> \cat <Plug>OrgAgendaTodo
nmap <buffer> <silent> \pi <Plug>OrgDateInsertTimestampInactiveWithCalendar
nmap <buffer> <silent> \pa <Plug>OrgDateInsertTimestampActiveWithCalendar
nmap <buffer> <silent> \si <Plug>OrgDateInsertTimestampInactiveCmdLine
nmap <buffer> <silent> \sa <Plug>OrgDateInsertTimestampActiveCmdLine
nmap <buffer> <silent> \ft <Plug>OrgFindTags
nmap <buffer> <silent> \st <Plug>OrgSetTags
nmap <buffer> <silent> \d <Plug>OrgTodoToggleInteractive
nmap <buffer> <silent> \ct <Plug>OrgTodoToggleNonInteractive
nmap <buffer> <silent> \9 zM:set fdl=9
nmap <buffer> <silent> \8 zM:set fdl=8
nmap <buffer> <silent> \7 zM:set fdl=7
nmap <buffer> <silent> \6 zM:set fdl=6
nmap <buffer> <silent> \5 zM:set fdl=5
nmap <buffer> <silent> \4 zM:set fdl=4
nmap <buffer> <silent> \3 zM:set fdl=3
nmap <buffer> <silent> \2 zM:set fdl=2
nmap <buffer> <silent> \1 zM:set fdl=1
nmap <buffer> <silent> \0 zM:set fdl=0
nmap <buffer> <silent> \, <Plug>OrgGlobalToggleFoldingReverse
nmap <buffer> <silent> \. <Plug>OrgGlobalToggleFoldingNormal
omap <buffer> <silent> ]] <Plug>OrgJumpToNextSkipChildrenOperator
vmap <buffer> <silent> ]] <Plug>OrgJumpToNextSkipChildrenVisual
nmap <buffer> <silent> ]] <Plug>OrgJumpToNextSkipChildrenNormal
nmap <buffer> <silent> ^ <Plug>OrgJumpToFirstCharacter
omap <buffer> <silent> ar :normal Var
vmap <buffer> <silent> ar <Plug>OrgAInnerTreeVisual
omap <buffer> <silent> ah :normal Vah
vmap <buffer> <silent> ah <Plug>OrgAInnerHeadingVisual
nmap <buffer> <silent> go <Plug>OrgHyperlinkPreviousLink
nmap <buffer> <silent> gn <Plug>OrgHyperlinkNextLink
nmap <buffer> <silent> gil <Plug>OrgHyperlinkInsert
nmap <buffer> <silent> gyl <Plug>OrgHyperlinkCopy
nmap <buffer> <silent> gl <Plug>OrgHyperlinkFollow
omap <buffer> <silent> g} <Plug>OrgJumpToParentsSiblingOperator
omap <buffer> <silent> g{ <Plug>OrgJumpToParentOperator
vmap <buffer> <silent> g} <Plug>OrgJumpToParentsSiblingVisual
vmap <buffer> <silent> g{ <Plug>OrgJumpToParentVisual
nmap <buffer> <silent> g} <Plug>OrgJumpToParentsSiblingNormal
nmap <buffer> <silent> g{ <Plug>OrgJumpToParentNormal
omap <buffer> <silent> ir <Plug>OrgInnerTreeOperator
vmap <buffer> <silent> ir <Plug>OrgInnerTreeVisual
omap <buffer> <silent> ih <Plug>OrgInnerHeadingOperator
vmap <buffer> <silent> ih <Plug>OrgInnerHeadingVisual
nmap <buffer> <silent> m]] <Plug>OrgMoveSubtreeDownward
nmap <buffer> <silent> m} <Plug>OrgMoveHeadingDownward
nmap <buffer> <silent> m[[ <Plug>OrgMoveSubtreeUpward
nmap <buffer> <silent> m{ <Plug>OrgMoveHeadingUpward
omap <buffer> <silent> { <Plug>OrgJumpToPreviousOperator
vmap <buffer> <silent> { <Plug>OrgJumpToPreviousVisual
nmap <buffer> <silent> { <Plug>OrgJumpToPreviousNormal
omap <buffer> <silent> } <Plug>OrgJumpToNextOperator
vmap <buffer> <silent> } <Plug>OrgJumpToNextVisual
nmap <buffer> <silent> } <Plug>OrgJumpToNextNormal
nmap <buffer> <silent> <C-S-Left> <Plug>OrgTodoSetBackward
nmap <buffer> <silent> <C-S-Right> <Plug>OrgTodoSetForward
nmap <buffer> <silent> <S-Left> <Plug>OrgTodoBackward
nmap <buffer> <silent> <S-Right> <Plug>OrgTodoForward
nmap <buffer> <silent> <C-CR> <Plug>OrgNewHeadingBelowAfterChildrenNormal
nmap <buffer> <silent> <S-CR> <Plug>OrgNewHeadingBelowNormal
nmap <buffer> <silent> <C-S-CR> <Plug>OrgNewHeadingAboveNormal
nmap <buffer> <silent> <S-Tab> <Plug>OrgToggleFoldingReverse
imap <buffer> <silent>  <Plug>OrgPromoteOnHeadingInsert
imap <buffer> <silent>  <Plug>OrgDemoteOnHeadingInsert
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'org'
setlocal filetype=org
endif
setlocal foldcolumn=1
setlocal foldenable
setlocal foldexpr=GetOrgFolding()
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=GetOrgFoldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=GetOrgIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=8
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal spell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!Powerline(2)
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'org'
setlocal syntax=org
endif
setlocal tabstop=8
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
1
normal! zo
8
normal! zo
22
normal! zo
43
normal! zo
43
normal! zc
74
normal! zo
74
normal! zc
115
normal! zo
116
normal! zo
117
normal! zo
117
normal! zc
125
normal! zo
125
normal! zc
146
normal! zo
146
normal! zc
159
normal! zo
159
normal! zc
173
normal! zo
173
normal! zc
183
normal! zo
183
normal! zc
116
normal! zc
115
normal! zc
let s:l = 23 - ((22 * winheight(0) + 39) / 79)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
23
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
